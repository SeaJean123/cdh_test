openapi: "3.0.1"
info:
  title: "Core API"
  version: "2.0.0"
  description: "The CDH API constitutes the central API of the Cloud Data Hub"
security:
  - sigv4: []
servers:
  # The gateway id in this URL is ignored when uploading to AWS.
  - url: "https://api.example.com"
x-amazon-apigateway-minimum-compression-size: 0
x-amazon-apigateway-request-validators:
  validateBodyAndParameters:
    validateRequestParameters: true
    validateRequestBody: true
x-amazon-apigateway-gateway-responses:
  # "Gateway responses" are error responses generated by API Gateway itself, without invoking the Core API Lambda.
  # The following lines make sure that these error responses include the Access-Control-Allow-Origin header.
  # Configuring DEFAULT_4XX and DEFAULT_5XX is enough to configure this for all gateway responses.
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
      gatewayresponse.header.Access-Control-Allow-Origin: "method.request.header.origin"
    responseTemplates:
      application/json: "{\"message\":$context.error.messageString}"
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
      gatewayresponse.header.Access-Control-Allow-Origin: "method.request.header.origin"
    responseTemplates:
      application/json: "{\"message\":$context.error.messageString}"
x-amazon-apigateway-policy:
  # This key does not seem to be documented in the API Gateway docs.
  # It sets the gateway's resource policy and must equal the one set by Terraform:
  # If we remove the policy from here, we end up without any resource policy,
  # because this is apparently applied after Terraform has set the resource policy.
  # If we remove the policy from Terraform, we risk that a later run of Terraform will delete our policy.
  Version: '2012-10-17'
  Statement:
    - Effect: Allow
      Principal:
        AWS: ["${accounts}"]
      Action: execute-api:Invoke
      Resource:
        - "*"
    - Effect: Allow
      Principal:
        AWS: "*"
      Action: execute-api:Invoke
      Resource:
        - "${options_arn}"
paths:
  /accounts:
    get:
      description: 'Return all stored information from all visible accounts.


        The response may be truncated and contain only a subset of all visible accounts.

        In that case, a ''nextPageToken'' is returned in the response''s header.

        This token can be used as a query parameter in a subsequent request to fetch
        the next ''page'' of accounts.'
      parameters:
      - in: query
        name: nextPageToken
        required: false
        schema:
          nullable: true
          title: nextPageToken
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    post:
      description: Register a new account with the CDH.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountBody'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: CREATED
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      tags:
      - internal
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '201'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /accounts/{accountId}:
    delete:
      description: Deregister an account from the CDH.
      responses:
        '204':
          description: NO_CONTENT
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      tags:
      - internal
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '204'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    get:
      description: Return all stored information of a specific account id, if the
        account is visible.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: accountId
      required: true
      schema:
        maxLength: 12
        minLength: 12
        pattern: '[0123456789]{12,12}'
        title: accountId
        type: string
    put:
      description: Update an account that is registered with the CDH.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      tags:
      - internal
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /api-info:
    get:
      description: Return the OpenAPI 3 specification of the Core API as JSON.
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
  /config:
    get:
      description: Return the configuration of the CDH Core API.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      tags:
      - internal
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
  /datasets:
    get:
      description: List visible datasets specified in query parameter `ids`.
      parameters:
      - in: query
        name: ids
        required: true
        schema:
          items:
            description: ID of the dataset
            example: hr_data_src
            maxLength: 255
            minLength: 5
            pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
            title: ids
            type: string
          maxItems: 100
          title: ids
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
  /resources/s3:
    get:
      description: Find the S3 resource corresponding to a specified bucket name,
        if it is visible.
      parameters:
      - in: query
        name: bucketName
        required: true
        schema:
          title: bucketName
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Resource'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
  /{hub}/businessObjects:
    get:
      description: 'List all business objects in a hub.


        The response may be truncated and contain only a subset of all visible business
        objects.

        In that case, a ''nextPageToken'' is returned in the response''s header.

        This token can be used as a query parameter in a subsequent request to fetch
        the next ''page'' of business objects.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubBusinessObjects'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
  /{hub}/businessObjects/{businessObject}:
    get:
      description: Return a specific businessObject in a hub.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubBusinessObject'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: businessObject
      required: true
      schema:
        $ref: '#/components/schemas/BusinessObject'
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
  /{hub}/datasets:
    get:
      description: 'List all visible datasets.


        The response may be truncated and contain only a subset of all visible datasets.

        In that case, a ''nextPageToken'' is returned in the response''s header.


        This token can be used as a query parameter in a subsequent request to fetch
        the next ''page'' of datasets.'''
      parameters:
      - description: The 'nextPageToken' returned in the header of the response to
          a previous request on the same endpoint.
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The 'nextPageToken' returned in the header of the response
            to a previous request on the same endpoint.
          maxLength: 10000
          nullable: true
          pattern: .{0,10000}
          title: nextPageToken
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    post:
      description: Create a new dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDatasetBody'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: CREATED
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '201'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /{hub}/datasets/{datasetId}:
    delete:
      description: Delete a dataset, if it is visible.
      responses:
        '204':
          description: NO_CONTENT
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '204'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    get:
      description: Return the dataset with the ID `dataset_id`, if it is visible.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    put:
      description: Update a dataset, if it is visible.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /{hub}/datasets/{datasetId}/permissions:
    delete:
      description: Revoke read access to a dataset for one stage and region.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetAccountPermissionBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetPermission'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
    get:
      description: 'Return the permissions of the dataset with the ID `datasetId`,
        if it is visible.


        The response may be truncated and contain only a subset of all permissions.

        In that case, a ''nextPageToken'' is returned in the response''s header.

        This token can be used as a query parameter in a subsequent request to fetch
        the next ''page'' of permissions.'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetPermissions'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    post:
      description: Grant read access to a dataset for one stage and region.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetAccountPermissionPostBody'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetPermission'
          description: CREATED
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '201'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /{hub}/resources:
    get:
      description: "Return a list of visible resources.\n\n    The response may be\
        \ truncated and contain only a subset of all visible resources.\n    In that\
        \ case, a 'nextPageToken' is returned in the response's header.\n    This\
        \ token can be used as a query parameter in a subsequent request to fetch\
        \ the next 'page' of resources."
      parameters:
      - description: ID of the dataset
        in: query
        name: datasetId
        required: false
        schema:
          description: ID of the dataset
          example: hr_data_src
          maxLength: 255
          minLength: 5
          nullable: true
          pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
          title: datasetId
          type: string
      - description: The 'nextPageToken' returned in the header of the response to
          a previous request on the same endpoint.
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The 'nextPageToken' returned in the header of the response
            to a previous request on the same endpoint.
          maxLength: 10000
          nullable: true
          pattern: .{0,10000}
          title: nextPageToken
          type: string
      - in: query
        name: region
        required: false
        schema:
          $ref: '#/components/schemas/Region'
      - in: query
        name: resourceAccountId
        required: false
        schema:
          maxLength: 12
          minLength: 12
          nullable: true
          pattern: '[0123456789]{12,12}'
          title: resourceAccountId
          type: string
      - in: query
        name: stage
        required: false
        schema:
          $ref: '#/components/schemas/Stage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
  /{hub}/resources/glue-sync:
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    post:
      description: Create a new Glue Sync resource, if the associated dataset is visible.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGlueSyncBody'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueSyncResource'
          description: CREATED
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '201'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /{hub}/resources/glue-sync/{datasetId}/{stage}/{region}:
    delete:
      description: Delete a glue sync resource, if the associated dataset is visible.
      responses:
        '204':
          description: NO_CONTENT
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '204'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    - in: path
      name: region
      required: true
      schema:
        $ref: '#/components/schemas/Region'
    - in: path
      name: stage
      required: true
      schema:
        $ref: '#/components/schemas/Stage'
  /{hub}/resources/glue-sync/{datasetId}/{stage}/{region}/filter-packages:
    get:
      description: Get all visible filter packages.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterPackages'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    - in: path
      name: region
      required: true
      schema:
        $ref: '#/components/schemas/Region'
    - in: path
      name: stage
      required: true
      schema:
        $ref: '#/components/schemas/Stage'
  /{hub}/resources/glue-sync/{datasetId}/{stage}/{region}/filter-packages/{packageId}:
    get:
      description: Get a filter package, if it is visible.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterPackage'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    - description: PackageId
      in: path
      name: packageId
      required: true
      schema:
        description: PackageId
        title: packageId
        type: string
    - in: path
      name: region
      required: true
      schema:
        $ref: '#/components/schemas/Region'
    - in: path
      name: stage
      required: true
      schema:
        $ref: '#/components/schemas/Stage'
  /{hub}/resources/s3:
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    post:
      description: "Create a new S3 bucket resource, if the associated dataset is\
        \ visible.\n\n    Also creates an SNS topic for updates to the bucket."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewS3BucketBody'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Resource'
          description: CREATED
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '201'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: NONE
  /{hub}/resources/s3/{datasetId}/{stage}/{region}:
    delete:
      description: Delete a s3 resource, if the associated dataset is visible.
      responses:
        '204':
          description: NO_CONTENT
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '204'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    - in: path
      name: region
      required: true
      schema:
        $ref: '#/components/schemas/Region'
    - in: path
      name: stage
      required: true
      schema:
        $ref: '#/components/schemas/Stage'
  /{hub}/resources/s3/{datasetId}/{stage}/{region}/stats:
    get:
      description: Return cloudwatch statistics for visible S3 resources aggregated
        over the last 24 hours.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ResourceStats'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    - in: path
      name: region
      required: true
      schema:
        $ref: '#/components/schemas/Region'
    - in: path
      name: stage
      required: true
      schema:
        $ref: '#/components/schemas/Stage'
  /{hub}/resources/{type}/{datasetId}/{stage}/{region}:
    get:
      description: Get a resource, if it is visible.
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/GlueSyncResource'
                - $ref: '#/components/schemas/S3Resource'
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
      x-amazon-apigateway-request-validator: validateBodyAndParameters
    options:
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      security: []
      tags:
      - options
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: '200'
        type: AWS_PROXY
        uri: arn:${partition}:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_arn}/invocations
    parameters:
    - description: ID of the dataset
      in: path
      name: datasetId
      required: true
      schema:
        description: ID of the dataset
        example: hr_data_src
        maxLength: 255
        minLength: 5
        pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
        title: datasetId
        type: string
    - in: path
      name: hub
      required: true
      schema:
        $ref: '#/components/schemas/Hub'
    - in: path
      name: region
      required: true
      schema:
        $ref: '#/components/schemas/Region'
    - in: path
      name: stage
      required: true
      schema:
        $ref: '#/components/schemas/Stage'
    - in: path
      name: type
      required: true
      schema:
        $ref: '#/components/schemas/ResourceType'
components:
  schemas:
    Account:
      properties:
        adminRoles:
          deprecated: true
          items:
            type: string
          type: array
        affiliation:
          $ref: '#/components/schemas/Affiliation'
        businessObjects:
          items:
            $ref: '#/components/schemas/BusinessObject'
          type: array
        costHistory:
          additionalProperties:
            type: number
          description: Historical costs on a per month basis to two decimal places
            in dollars or yuan
          nullable: true
          type: object
        creationDate:
          format: date-time
          type: string
        data:
          additionalProperties: {}
          description: Contains unspecified account data
          type: object
        estimatedCost:
          description: Estimated costs of current month to two decimal places in dollars
            or yuan
          format: double
          nullable: true
          type: number
        forecastedCost:
          description: Forecasted costs of current month to two decimal places in
            dollars or yuan
          format: double
          nullable: true
          type: number
        friendlyName:
          type: string
        group:
          description: Used for grouping accounts, e.g. in Data Portal Providers or
            Usecases.
          nullable: true
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        id:
          type: string
        layers:
          items:
            $ref: '#/components/schemas/Layer'
          type: array
        requestId:
          description: Id to identify account creation request from Data Portal.
          nullable: true
          type: string
        responsibles:
          items:
            type: string
          type: array
        roles:
          items:
            $ref: '#/components/schemas/AccountRole'
          type: array
        stages:
          items:
            $ref: '#/components/schemas/Stage'
          type: array
        type:
          $ref: '#/components/schemas/AccountType'
        updateDate:
          format: date-time
          type: string
        visibleInHubs:
          items:
            $ref: '#/components/schemas/Hub'
          type: array
      required:
      - id
      - adminRoles
      - affiliation
      - businessObjects
      - costHistory
      - creationDate
      - data
      - estimatedCost
      - forecastedCost
      - friendlyName
      - group
      - hub
      - layers
      - responsibles
      - requestId
      - roles
      - stages
      - type
      - updateDate
      - visibleInHubs
      type: object
    AccountRole:
      properties:
        friendlyName:
          type: string
        name:
          type: string
        path:
          type: string
        type:
          $ref: '#/components/schemas/AccountRoleType'
      required:
      - name
      - path
      - type
      - friendlyName
      type: object
    AccountRoleBody:
      additionalProperties: false
      properties:
        friendlyName:
          title: friendlyName
          type: string
        name:
          example: CDHDevOps
          pattern: ^[\w+=,.@-]+$
          title: name
          type: string
        path:
          example: /cdh/
          pattern: ^/([!-~]+/)*$
          title: path
          type: string
        type:
          $ref: '#/components/schemas/AccountRoleType'
      required:
      - friendlyName
      - type
      type: object
    AccountRoleType:
      description: Type of role in an AWS account.
      enum:
      - READ
      - WRITE
      type: string
    AccountType:
      description: Usage type of the account.
      enum:
      - internal
      - provider
      - technical
      - usecase
      type: string
    AccountWithoutCosts:
      properties:
        adminRoles:
          deprecated: true
          items:
            type: string
          type: array
        affiliation:
          $ref: '#/components/schemas/Affiliation'
        businessObjects:
          items:
            $ref: '#/components/schemas/BusinessObject'
          type: array
        creationDate:
          format: date-time
          type: string
        data:
          additionalProperties: {}
          description: Contains unspecified account data
          type: object
        friendlyName:
          type: string
        group:
          description: Used for grouping accounts, e.g. in Data Portal Providers or
            Usecases.
          nullable: true
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        id:
          type: string
        layers:
          items:
            $ref: '#/components/schemas/Layer'
          type: array
        requestId:
          description: Id to identify account creation request from Data Portal.
          nullable: true
          type: string
        responsibles:
          items:
            type: string
          type: array
        roles:
          items:
            $ref: '#/components/schemas/AccountRole'
          type: array
        stages:
          items:
            $ref: '#/components/schemas/Stage'
          type: array
        type:
          $ref: '#/components/schemas/AccountType'
        updateDate:
          format: date-time
          type: string
        visibleInHubs:
          items:
            $ref: '#/components/schemas/Hub'
          type: array
      required:
      - id
      - adminRoles
      - affiliation
      - businessObjects
      - creationDate
      - data
      - friendlyName
      - group
      - hub
      - layers
      - responsibles
      - requestId
      - roles
      - stages
      - type
      - updateDate
      - visibleInHubs
      type: object
    Accounts:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountWithoutCosts'
          type: array
      required:
      - accounts
      type: object
    Affiliation:
      description: The affiliation of an account is derived from the entity that provisioned
        it
      enum:
      - cdh
      type: string
    BusinessObject:
      description: Clusters datasets by their origin and/or the nature of the data
        they contain
      enum:
      - humres
      - bi
      type: string
    Confidentiality:
      description: Describes the level of protection in place for a given dataset.
      enum:
      - public
      - not-public
      - confidential
      - strictly-confidential
      - secret
      type: string
    Config:
      properties:
        enums:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnumKey'
            type: array
          type: object
        hubs:
          items:
            $ref: '#/components/schemas/HubDescription'
          type: array
      required:
      - enums
      - hubs
      type: object
    Dataset:
      properties:
        businessObject:
          $ref: '#/components/schemas/BusinessObject'
        confidentiality:
          $ref: '#/components/schemas/Confidentiality'
        containsPii:
          type: boolean
        creationDate:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        description:
          type: string
        documentation:
          nullable: true
          type: string
        engineers:
          items:
            $ref: '#/components/schemas/DatasetParticipant'
          type: array
        externalLinks:
          items:
            $ref: '#/components/schemas/DatasetExternalLink'
          type: array
        friendlyName:
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        hubVisibility:
          items:
            $ref: '#/components/schemas/Hub'
          type: array
        id:
          type: string
        ingestFrequency:
          $ref: '#/components/schemas/IngestFrequency'
        labels:
          items:
            type: string
          type: array
        layer:
          $ref: '#/components/schemas/Layer'
        lineage:
          $ref: '#/components/schemas/DatasetLineage'
        name:
          type: string
        ownerAccountId:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/DatasetPermission'
          type: array
        previewAvailable:
          type: boolean
        purpose:
          items:
            $ref: '#/components/schemas/DatasetPurpose'
          type: array
        qualityScore:
          nullable: true
          type: integer
        retentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        sourceIdentifier:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/DatasetStatus'
        stewards:
          items:
            $ref: '#/components/schemas/DatasetParticipant'
          type: array
        supportGroup:
          nullable: true
          type: string
        supportLevel:
          $ref: '#/components/schemas/SupportLevel'
        tags:
          additionalProperties:
            type: string
          description: Custom tags for further dataset classification.
          type: object
        updateDate:
          format: date-time
          type: string
      required:
      - id
      - businessObject
      - confidentiality
      - containsPii
      - creationDate
      - description
      - engineers
      - externalLinks
      - friendlyName
      - hub
      - hubVisibility
      - ingestFrequency
      - labels
      - layer
      - lineage
      - name
      - ownerAccountId
      - permissions
      - previewAvailable
      - purpose
      - retentionPeriod
      - stewards
      - supportLevel
      - tags
      - updateDate
      type: object
    DatasetAccountPermissionBody:
      additionalProperties: false
      properties:
        accountId:
          maxLength: 12
          minLength: 12
          pattern: '[0123456789]{12,12}'
          title: accountId
          type: string
        region:
          $ref: '#/components/schemas/Region'
        stage:
          $ref: '#/components/schemas/Stage'
      required:
      - accountId
      - region
      - stage
      type: object
    DatasetAccountPermissionPostBody:
      additionalProperties: false
      properties:
        accountId:
          maxLength: 12
          minLength: 12
          pattern: '[0123456789]{12,12}'
          title: accountId
          type: string
        region:
          $ref: '#/components/schemas/Region'
        stage:
          $ref: '#/components/schemas/Stage'
        syncType:
          $ref: '#/components/schemas/SyncType'
      required:
      - accountId
      - region
      - stage
      type: object
    DatasetExternalLink:
      properties:
        name:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/DatasetExternalLinkType'
        url:
          type: string
      required:
      - name
      - type
      - url
      type: object
    DatasetExternalLinkType:
      description: Specifies the type of content found at a given URL.
      enum:
      - docs
      - code-repo
      type: string
    DatasetLineage:
      properties:
        upstream:
          items:
            type: string
          type: array
      required:
      - upstream
      type: object
    DatasetParticipant:
      properties:
        id:
          type: string
        idp:
          type: string
      required:
      - id
      - idp
      type: object
    DatasetParticipantBodyPart:
      additionalProperties: false
      properties:
        id:
          example: someone@example.com
          pattern: "^[\xE4\xF6\xFC\xC4\xD6\xDC\xDFa-zA-Z0-9_.-]+@([A-Za-z0-9.-]+\\\
            .[A-Za-z0-9]{2,})$"
          title: id
          type: string
        idp:
          title: idp
          type: string
      required:
      - id
      - idp
      type: object
    DatasetPermission:
      properties:
        accountId:
          type: string
        region:
          $ref: '#/components/schemas/Region'
        stage:
          $ref: '#/components/schemas/Stage'
        syncType:
          $ref: '#/components/schemas/SyncType'
      required:
      - accountId
      - region
      - stage
      - syncType
      type: object
    DatasetPermissions:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/DatasetPermission'
          type: array
      required:
      - permissions
      type: object
    DatasetPurpose:
      description: Specifies how a dataset is intended and/or allowed to be used,
        e.g. with respect to data privacy regulations
      enum:
      - recreation
      - making-money
      type: string
    DatasetStatus:
      description: Set by the dataset's owner to convey whether the dataset is ready
        for consumption by others.
      enum:
      - planned
      - development
      - released
      - deprecated
      type: string
    Datasets:
      properties:
        datasets:
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
      required:
      - datasets
      type: object
    EnumKey:
      properties:
        friendlyName:
          type: string
        value:
          type: string
      required:
      - value
      - friendlyName
      type: object
    ExternalLinkBody:
      additionalProperties: false
      properties:
        name:
          default: null
          nullable: true
          title: name
          type: string
        type:
          $ref: '#/components/schemas/DatasetExternalLinkType'
        url:
          title: url
          type: string
      required:
      - type
      type: object
    FilterPackage:
      properties:
        creationDate:
          type: string
        creatorUserId:
          type: string
        datasetId:
          type: string
        description:
          type: string
        friendlyName:
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        id:
          type: string
        region:
          $ref: '#/components/schemas/Region'
        stage:
          $ref: '#/components/schemas/Stage'
        tableAccess:
          items:
            $ref: '#/components/schemas/TableFilter'
          type: array
        updateDate:
          format: date-time
          type: string
      required:
      - id
      - datasetId
      - stage
      - region
      - friendlyName
      - description
      - tableAccess
      - hub
      - creationDate
      - creatorUserId
      - updateDate
      type: object
    FilterPackages:
      properties:
        filterPackages:
          items:
            $ref: '#/components/schemas/FilterPackage'
          type: array
      required:
      - filterPackages
      type: object
    GlueSyncAttributes:
      properties:
        syncType:
          $ref: '#/components/schemas/SyncType'
      required:
      - syncType
      type: object
    GlueSyncResource:
      properties:
        arn:
          type: string
        attributes:
          $ref: '#/components/schemas/GlueSyncAttributes'
        creationDate:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        datasetId:
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        name:
          type: string
        ownerAccountId:
          type: string
        region:
          $ref: '#/components/schemas/Region'
        resourceAccountId:
          type: string
        stage:
          $ref: '#/components/schemas/Stage'
        type:
          enum:
          - glue-sync
          type: string
        updateDate:
          format: date-time
          type: string
      required:
      - datasetId
      - arn
      - creationDate
      - creatorUserId
      - hub
      - name
      - ownerAccountId
      - region
      - resourceAccountId
      - stage
      - updateDate
      - type
      - attributes
      type: object
    Hub:
      description: High-level organizational category. For different hubs, data resides
        in separate AWS accounts. Each Hub can possess its own specific configuration,
        e.g. which AWS regions are supported.
      type: string
    HubBusinessObject:
      properties:
        businessObject:
          $ref: '#/components/schemas/BusinessObject'
        friendlyName:
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        responsibles:
          items:
            type: string
          type: array
      required:
      - hub
      - businessObject
      - friendlyName
      - responsibles
      type: object
    HubBusinessObjects:
      properties:
        businessObjects:
          items:
            $ref: '#/components/schemas/HubBusinessObject'
          type: array
      required:
      - businessObjects
      type: object
    HubDescription:
      properties:
        friendlyName:
          type: string
        name:
          $ref: '#/components/schemas/Hub'
        regions:
          items:
            $ref: '#/components/schemas/Region'
          type: array
        resourceAccounts:
          items:
            properties:
              id:
                type: string
              stage:
                $ref: '#/components/schemas/Stage'
            type: object
          type: array
      required:
      - name
      - friendlyName
      - resourceAccounts
      - regions
      type: object
    IngestFrequency:
      description: "Can be used to specify what kind of data ingest can be expected\
        \ for a dataset.\n\n    Note that this is non-inferred information. The provider\
        \ of a dataset is responsible for maintaining this\n    information manually.\n\
        \    "
      enum:
      - undefined
      - streaming
      - hourly
      - daily
      - weekly
      - monthly
      - ad-hoc
      type: string
    Layer:
      description: Level of processing applied to the dataset.
      enum:
      - raw
      - src
      - pre
      - sem
      type: string
    NewAccountBody:
      additionalProperties: false
      properties:
        adminRoles:
          items:
            example: CDHDevOps
            pattern: ^[\w+=,.@-]+$
            title: adminRoles
            type: string
          title: adminRoles
          type: array
        affiliation:
          $ref: '#/components/schemas/Affiliation'
        businessObjects:
          items:
            $ref: '#/components/schemas/BusinessObject'
          title: businessObjects
          type: array
        friendlyName:
          maxLength: 150
          minLength: 3
          pattern: .{3,150}
          title: friendlyName
          type: string
        group:
          default: null
          nullable: true
          title: group
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        id:
          maxLength: 12
          minLength: 12
          pattern: '[0123456789]{12,12}'
          title: id
          type: string
        layers:
          items:
            $ref: '#/components/schemas/Layer'
          title: layers
          type: array
        requestId:
          default: null
          nullable: true
          title: requestId
          type: string
        responsibles:
          items:
            example: someone@example.com
            pattern: "^[\xE4\xF6\xFC\xC4\xD6\xDC\xDFa-zA-Z0-9_.-]+@([A-Za-z0-9.-]+\\\
              .[A-Za-z0-9]{2,})$"
            title: responsibles
            type: string
          title: responsibles
          type: array
        roles:
          default: null
          items:
            $ref: '#/components/schemas/AccountRoleBody'
            type: object
          nullable: true
          title: roles
          type: array
        stages:
          items:
            $ref: '#/components/schemas/Stage'
          title: stages
          type: array
        type:
          $ref: '#/components/schemas/AccountType'
        visibleInHubs:
          items:
            $ref: '#/components/schemas/Hub'
          title: visibleInHubs
          type: array
      required:
      - affiliation
      - businessObjects
      - friendlyName
      - hub
      - id
      - layers
      - responsibles
      - stages
      - type
      - visibleInHubs
      type: object
    NewDatasetBody:
      additionalProperties: false
      properties:
        businessObject:
          $ref: '#/components/schemas/BusinessObject'
        confidentiality:
          $ref: '#/components/schemas/Confidentiality'
        containsPii:
          title: containsPii
          type: boolean
        description:
          maxLength: 1000
          minLength: 5
          pattern: '[\s\S]{5,1000}'
          title: description
          type: string
        documentation:
          default: null
          maxLength: 50000
          nullable: true
          pattern: '[\s\S]{0,50000}'
          title: documentation
          type: string
        engineers:
          items:
            $ref: '#/components/schemas/DatasetParticipantBodyPart'
            type: object
          title: engineers
          type: array
        externalLinks:
          default: null
          items:
            $ref: '#/components/schemas/ExternalLinkBody'
            type: object
          nullable: true
          title: externalLinks
          type: array
        friendlyName:
          maxLength: 40
          minLength: 1
          pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\-\
            ]{1,40}'
          title: friendlyName
          type: string
        hubVisibility:
          default: null
          items:
            $ref: '#/components/schemas/Hub'
          nullable: true
          title: hubVisibility
          type: array
        ingestFrequency:
          $ref: '#/components/schemas/IngestFrequency'
        labels:
          description: Can be used to track the legal entities or markets from which
            the contained data originates.
          items:
            maxLength: 100
            minLength: 1
            pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_]{1,100}'
            title: labels
            type: string
          maxItems: 100
          title: labels
          type: array
        layer:
          $ref: '#/components/schemas/Layer'
        name:
          maxLength: 20
          minLength: 3
          pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{3,20}'
          title: name
          type: string
        ownerAccountId:
          default: null
          description: create resources on behalf of the specified account
          maxLength: 12
          minLength: 12
          nullable: true
          pattern: '[0123456789]{12,12}'
          title: ownerAccountId
          type: string
        previewAvailable:
          default: null
          nullable: true
          title: previewAvailable
          type: boolean
        purpose:
          default: null
          items:
            $ref: '#/components/schemas/DatasetPurpose'
          nullable: true
          title: purpose
          type: array
        retentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        sourceIdentifier:
          default: null
          description: ID of the data source system.
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\-:]{1,255}'
          title: sourceIdentifier
          type: string
        stewards:
          default: null
          items:
            $ref: '#/components/schemas/DatasetParticipantBodyPart'
            type: object
          nullable: true
          title: stewards
          type: array
        supportGroup:
          default: null
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\-:]{1,255}'
          title: supportGroup
          type: string
        supportLevel:
          $ref: '#/components/schemas/SupportLevel'
        tags:
          title: tags
          type: object
        upstreamLineage:
          default: null
          items:
            description: ID of the dataset
            example: hr_data_src
            maxLength: 255
            minLength: 5
            pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
            title: upstreamLineage
            type: string
          nullable: true
          title: upstreamLineage
          type: array
      required:
      - businessObject
      - confidentiality
      - containsPii
      - description
      - engineers
      - friendlyName
      - layer
      - name
      - tags
      type: object
    NewGlueSyncBody:
      additionalProperties: false
      properties:
        datasetId:
          description: ID of the dataset
          example: hr_data_src
          maxLength: 255
          minLength: 5
          pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
          title: datasetId
          type: string
        ownerAccountId:
          default: null
          description: create resources on behalf of the specified account
          maxLength: 12
          minLength: 12
          nullable: true
          pattern: '[0123456789]{12,12}'
          title: ownerAccountId
          type: string
        region:
          $ref: '#/components/schemas/Region'
        stage:
          $ref: '#/components/schemas/Stage'
        syncType:
          $ref: '#/components/schemas/SyncType'
      required:
      - datasetId
      - region
      - stage
      type: object
    NewS3BucketBody:
      additionalProperties: false
      properties:
        datasetId:
          description: ID of the dataset
          example: hr_data_src
          maxLength: 255
          minLength: 5
          pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
          title: datasetId
          type: string
        ownerAccountId:
          default: null
          description: create resources on behalf of the specified account
          maxLength: 12
          minLength: 12
          nullable: true
          pattern: '[0123456789]{12,12}'
          title: ownerAccountId
          type: string
        region:
          $ref: '#/components/schemas/Region'
        stage:
          $ref: '#/components/schemas/Stage'
      required:
      - datasetId
      - region
      - stage
      type: object
    Region:
      description: AWS region of the resource
      enum:
      - eu-west-1
      - us-east-1
      type: string
    ResourceType:
      description: Type of the resource.
      enum:
      - s3
      - glue-sync
      type: string
    Resources:
      properties:
        resources:
          items:
            oneOf:
            - $ref: '#/components/schemas/GlueSyncResource'
            - $ref: '#/components/schemas/S3Resource'
          type: array
      required:
      - resources
      type: object
    RetentionPeriod:
      description: "Can be used to specify how long data is typically available in\
        \ a dataset.\n\n    The provider of a dataset is responsible for maintaining\
        \ this information manually and ensuring the desired\n    retention is actually\
        \ implemented. In particular, there is no platform-side automatism removing\
        \ data based on this\n    attribute.\n    "
      enum:
      - undefined
      - seven-days
      - fourteen-days
      - thirty-days
      - three-months
      - six-months
      - one-year
      - ten-years
      type: string
    S3Attributes:
      properties:
        kmsKeyArn:
          type: string
        snsTopicArn:
          type: string
      required:
      - kmsKeyArn
      - snsTopicArn
      type: object
    S3Resource:
      properties:
        arn:
          type: string
        attributes:
          $ref: '#/components/schemas/S3Attributes'
        creationDate:
          format: date-time
          type: string
        creatorUserId:
          nullable: true
          type: string
        datasetId:
          type: string
        hub:
          $ref: '#/components/schemas/Hub'
        name:
          type: string
        ownerAccountId:
          type: string
        region:
          $ref: '#/components/schemas/Region'
        resourceAccountId:
          type: string
        stage:
          $ref: '#/components/schemas/Stage'
        type:
          enum:
          - s3
          type: string
        updateDate:
          format: date-time
          type: string
      required:
      - datasetId
      - arn
      - creationDate
      - creatorUserId
      - hub
      - name
      - ownerAccountId
      - region
      - resourceAccountId
      - stage
      - updateDate
      - attributes
      - type
      type: object
    S3ResourceStats:
      properties:
        4xxErrors:
          description: Number of 4xx HTTP-Errors on s3 bucket
          format: double
          nullable: true
          type: number
        5xxErrors:
          description: Number of 5xx HTTP-Errors on s3 bucket
          format: double
          nullable: true
          type: number
        allRequests:
          description: Total count of HTTP-REST operations on s3 bucket
          format: double
          nullable: true
          type: number
        bucketSizeBytes:
          description: Estimated maximum size of all objects in s3 bucket
          format: double
          nullable: true
          type: number
        bytesDownloaded:
          description: Number of bytes downloaded from s3 bucket
          format: double
          nullable: true
          type: number
        bytesUploaded:
          description: Number of bytes uploaded to s3 bucket
          format: double
          nullable: true
          type: number
        deleteRequests:
          description: Total count of Delete operations on s3 bucket
          format: double
          nullable: true
          type: number
        firstByteLatency:
          description: Time in ms at which the first byte of s3-object is transferred
          format: double
          nullable: true
          type: number
        getRequests:
          description: Total count of Get operations on s3 bucket
          format: double
          nullable: true
          type: number
        headRequests:
          description: Total count of Head operations on s3 bucket
          format: double
          nullable: true
          type: number
        listRequests:
          description: Total count of List operations on s3 bucket
          format: double
          nullable: true
          type: number
        numberOfMessagesPublished:
          description: Count of messages published to sns queue of s3 bucket
          format: double
          nullable: true
          type: number
        numberOfObjects:
          description: Number of objects stored in s3 bucket
          format: double
          nullable: true
          type: number
        postRequests:
          description: Total count of Post operations on s3 bucket
          format: double
          nullable: true
          type: number
        publishSize:
          description: Payload size of messages published to sns queue of s3 bucket
          format: double
          nullable: true
          type: number
        putRequests:
          description: Total count of Put operations on s3 bucket
          format: double
          nullable: true
          type: number
        selectBytesReturned:
          description: Number of bytes returned from s3 bucket by using s3 select
          format: double
          nullable: true
          type: number
        selectBytesScanned:
          description: Number of bytes read on s3 bucket by using s3 select
          format: double
          nullable: true
          type: number
        selectRequests:
          description: Total count of Select operations on s3 bucket
          format: double
          nullable: true
          type: number
        totalRequestLatency:
          description: Time in ms at which the last byte of s3-object is transferred
          format: double
          nullable: true
          type: number
      required:
      - bucketSizeBytes
      - numberOfMessagesPublished
      - numberOfObjects
      - publishSize
      - allRequests
      - getRequests
      - headRequests
      - listRequests
      - putRequests
      - deleteRequests
      - postRequests
      - selectRequests
      - bytesDownloaded
      - bytesUploaded
      - 4xxErrors
      - 5xxErrors
      - firstByteLatency
      - totalRequestLatency
      - selectBytesScanned
      - selectBytesReturned
      type: object
    Stage:
      description: "\n    Deployment stage to be used.\n\n    This pertains to the\
        \ data hosted in CDH, not the platform itself.\n    "
      enum:
      - dev
      - int
      - prod
      type: string
    SupportLevel:
      description: Can be used to specify how data providers will support a dataset.
      enum:
      - undefined
      - none
      - best-effort
      - business-hours
      - twenty-four-seven
      type: string
    SyncType:
      description: Type of synchronisation used for the glue database.
      enum:
      - glue-sync
      - resource-link
      - lake-formation
      type: string
    TableFilter:
      properties:
        creationDate:
          type: string
        creatorUserId:
          type: string
        databaseName:
          type: string
        excludedColumns:
          items:
            type: string
          type: array
        filterId:
          type: string
        fullAccess:
          type: boolean
        includedColumns:
          items:
            type: string
          type: array
        packageId:
          type: string
        resourceAccountId:
          type: string
        rowFilter:
          type: string
        tableName:
          type: string
        updateDate:
          format: date-time
          type: string
      required:
      - filterId
      - packageId
      - resourceAccountId
      - databaseName
      - tableName
      - fullAccess
      - rowFilter
      - includedColumns
      - excludedColumns
      - creationDate
      - creatorUserId
      - updateDate
      type: object
    UpdateAccountBody:
      additionalProperties: false
      properties:
        adminRoles:
          items:
            example: CDHDevOps
            pattern: ^[\w+=,.@-]+$
            title: adminRoles
            type: string
          title: adminRoles
          type: array
        affiliation:
          $ref: '#/components/schemas/Affiliation'
        businessObjects:
          default: null
          items:
            $ref: '#/components/schemas/BusinessObject'
          nullable: true
          title: businessObjects
          type: array
        friendlyName:
          default: null
          maxLength: 150
          minLength: 3
          nullable: true
          pattern: .{3,150}
          title: friendlyName
          type: string
        group:
          default: null
          nullable: true
          title: group
          type: string
        layers:
          default: null
          items:
            $ref: '#/components/schemas/Layer'
          nullable: true
          title: layers
          type: array
        responsibles:
          items:
            example: someone@example.com
            pattern: "^[\xE4\xF6\xFC\xC4\xD6\xDC\xDFa-zA-Z0-9_.-]+@([A-Za-z0-9.-]+\\\
              .[A-Za-z0-9]{2,})$"
            title: responsibles
            type: string
          title: responsibles
          type: array
        roles:
          default: null
          items:
            $ref: '#/components/schemas/AccountRoleBody'
            type: object
          nullable: true
          title: roles
          type: array
        stages:
          default: null
          items:
            $ref: '#/components/schemas/Stage'
          nullable: true
          title: stages
          type: array
        type:
          $ref: '#/components/schemas/AccountType'
        visibleInHubs:
          default: null
          items:
            $ref: '#/components/schemas/Hub'
          nullable: true
          title: visibleInHubs
          type: array
      type: object
    UpdateDatasetBody:
      additionalProperties: false
      properties:
        confidentiality:
          $ref: '#/components/schemas/Confidentiality'
        containsPii:
          default: null
          nullable: true
          title: containsPii
          type: boolean
        description:
          default: null
          maxLength: 1000
          minLength: 5
          nullable: true
          pattern: '[\s\S]{5,1000}'
          title: description
          type: string
        documentation:
          default: null
          maxLength: 50000
          nullable: true
          pattern: '[\s\S]{0,50000}'
          title: documentation
          type: string
        engineers:
          default: null
          items:
            $ref: '#/components/schemas/DatasetParticipantBodyPart'
            type: object
          nullable: true
          title: engineers
          type: array
        externalLinks:
          default: null
          items:
            $ref: '#/components/schemas/ExternalLinkBody'
            type: object
          nullable: true
          title: externalLinks
          type: array
        friendlyName:
          default: null
          maxLength: 40
          minLength: 1
          nullable: true
          pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\-\
            ]{1,40}'
          title: friendlyName
          type: string
        hubVisibility:
          default: null
          items:
            $ref: '#/components/schemas/Hub'
          nullable: true
          title: hubVisibility
          type: array
        ingestFrequency:
          $ref: '#/components/schemas/IngestFrequency'
        labels:
          description: Can be used to track the legal entities or markets from which
            the contained data originates.
          items:
            maxLength: 100
            minLength: 1
            pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_]{1,100}'
            title: labels
            type: string
          maxItems: 100
          title: labels
          type: array
        previewAvailable:
          default: null
          nullable: true
          title: previewAvailable
          type: boolean
        purpose:
          default: null
          items:
            $ref: '#/components/schemas/DatasetPurpose'
          nullable: true
          title: purpose
          type: array
        qualityScore:
          default: null
          format: int64
          maximum: 100
          minimum: 0
          nullable: true
          title: qualityScore
          type: integer
        retentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        sourceIdentifier:
          default: null
          description: ID of the data source system.
          maxLength: 255
          nullable: true
          pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\-:]{0,255}'
          title: sourceIdentifier
          type: string
        status:
          $ref: '#/components/schemas/DatasetStatus'
        stewards:
          default: null
          items:
            $ref: '#/components/schemas/DatasetParticipantBodyPart'
            type: object
          nullable: true
          title: stewards
          type: array
        supportGroup:
          default: null
          maxLength: 255
          nullable: true
          pattern: '[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\-:]{0,255}'
          title: supportGroup
          type: string
        supportLevel:
          $ref: '#/components/schemas/SupportLevel'
        tags:
          default: null
          nullable: true
          title: tags
          type: object
        upstreamLineage:
          default: null
          items:
            description: ID of the dataset
            example: hr_data_src
            maxLength: 255
            minLength: 5
            pattern: '[abcdefghijklmnopqrstuvwxyz0123456789_]{5,255}'
            title: upstreamLineage
            type: string
          nullable: true
          title: upstreamLineage
          type: array
      type: object
  securitySchemes:
    sigv4:
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
