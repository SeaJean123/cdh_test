---
name: Deployment

on:
  push:
    branches:
      - main
      - prefix/*

jobs:
  set_prefix:
    runs-on: ubuntu-latest
    outputs:
      prefix: ${{ steps.set-parameters.outputs.prefix }}
    steps:
      - name: Set terraform parameters
        id: set-parameters
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == "prefix/"* ]]; then
            echo "prefix=${GITHUB_REF#refs/heads/prefix/}" >> $GITHUB_OUTPUT
          else
            echo "prefix=" >> $GITHUB_OUTPUT
          fi

  create_virtualenv:
    needs: set_prefix
    if: needs.set_prefix.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          custom_cache_key_element: ${{ github.sha }}

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: |
          python -m  pip install -r src/requirements-dev.txt -r src/requirements.txt
          python -m pip install src/cdh_core
          python -m pip install src/lambdas/cdh_core_api
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  check_infrastructure:
    needs: create_virtualenv
    if: needs.create_virtualenv.result == 'success'
    runs-on: [self-hosted, ubuntu-latest]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.10.2

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          custom_cache_key_element: ${{ github.sha }}

      - name: Set Config file env var
        run: echo "CDH_CORE_CONFIG_FILE_PATH=${GITHUB_WORKSPACE}/infrastructure/cdh-oss.bmw.cloud/cdh-core-config-test-deployment.yaml" >> $GITHUB_ENV

      - name: Check infrastructure is up-to-date
        run: pytest "infrastructure/bin/validate_cdh_deployment_test.py"
        env:
          LOG_TIMEOUT: 10

      - name: Get dev api account
        id: get-dev-api-account
        run: |
          accounts=$(python infrastructure/bin/get_purpose_account_tuples.py)
          account=$(echo $accounts | jq -r '.[0].account')
          echo "dev-api-account=$account" >> $GITHUB_OUTPUT
        env:
          ENVIRONMENT: dev
          PURPOSES: '["api"]'

      - name: Configure AWS credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v1-node16  # https://github.com/aws-actions/configure-aws-credentials/issues/489
        with:
          role-to-assume: arn:aws-cn:iam::607580047483:role/GITHUB_TEST
          aws-region: cn-north-1

      - name: Check infrastructure is compatible with create-cdh
        run: pytest "infrastructure/bin/validate_create_cdh_compatibility_test.py"
        env:
          CDH_CORE_CONFIG_FILE_PATH: ${{ github.workspace }}/infrastructure/bin/create-cdh-compatibility-test-config.yaml
          LOG_TIMEOUT: 10
